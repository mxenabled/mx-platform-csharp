/*
 * MX Platform API
 *
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using MX.Platform.CSharp.Client;
using MX.Platform.CSharp.Api;
// uncomment below to import models
//using MX.Platform.CSharp.Model;

namespace MX.Platform.CSharp.Test.Api
{
    /// <summary>
    ///  Class for testing SpendingPlanApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SpendingPlanApiTests : IDisposable
    {
        private SpendingPlanApi instance;

        public SpendingPlanApiTests()
        {
            instance = new SpendingPlanApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SpendingPlanApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SpendingPlanApi
            //Assert.IsType<SpendingPlanApi>(instance);
        }

        /// <summary>
        /// Test CreateSpendingPlan
        /// </summary>
        [Fact]
        public void CreateSpendingPlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userGuid = null;
            //var response = instance.CreateSpendingPlan(userGuid);
            //Assert.IsType<SpendingPlanResponse>(response);
        }

        /// <summary>
        /// Test CreateSpendingPlanIterationItem
        /// </summary>
        [Fact]
        public void CreateSpendingPlanIterationItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string spendingPlanGuid = null;
            //string userGuid = null;
            //SpendingPlanIterationItemCreateRequestBody spendingPlanIterationItemCreateRequestBody = null;
            //var response = instance.CreateSpendingPlanIterationItem(spendingPlanGuid, userGuid, spendingPlanIterationItemCreateRequestBody);
            //Assert.IsType<SpendingPlanIterationItemResponse>(response);
        }

        /// <summary>
        /// Test DeleteSpendingPlan
        /// </summary>
        [Fact]
        public void DeleteSpendingPlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userGuid = null;
            //string spendingPlanGuid = null;
            //instance.DeleteSpendingPlan(userGuid, spendingPlanGuid);
        }

        /// <summary>
        /// Test DeleteSpendingPlanAccount
        /// </summary>
        [Fact]
        public void DeleteSpendingPlanAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userGuid = null;
            //string spendingPlanGuid = null;
            //string spendingPlanAccountGuid = null;
            //instance.DeleteSpendingPlanAccount(userGuid, spendingPlanGuid, spendingPlanAccountGuid);
        }

        /// <summary>
        /// Test DeleteSpendingPlanIterationItem
        /// </summary>
        [Fact]
        public void DeleteSpendingPlanIterationItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userGuid = null;
            //string spendingPlanGuid = null;
            //string iterationItemGuid = null;
            //instance.DeleteSpendingPlanIterationItem(userGuid, spendingPlanGuid, iterationItemGuid);
        }

        /// <summary>
        /// Test ListSpendingPlanAccounts
        /// </summary>
        [Fact]
        public void ListSpendingPlanAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userGuid = null;
            //string spendingPlanGuid = null;
            //int? page = null;
            //int? recordsPerPage = null;
            //var response = instance.ListSpendingPlanAccounts(userGuid, spendingPlanGuid, page, recordsPerPage);
            //Assert.IsType<SpendingPlanAccountsResponse>(response);
        }

        /// <summary>
        /// Test ListSpendingPlanIterationItems
        /// </summary>
        [Fact]
        public void ListSpendingPlanIterationItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userGuid = null;
            //string spendingPlanGuid = null;
            //int? page = null;
            //int? recordsPerPage = null;
            //var response = instance.ListSpendingPlanIterationItems(userGuid, spendingPlanGuid, page, recordsPerPage);
            //Assert.IsType<SpendingPlanIterationItemsResponseBody>(response);
        }

        /// <summary>
        /// Test ListSpendingPlanIterations
        /// </summary>
        [Fact]
        public void ListSpendingPlanIterationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userGuid = null;
            //string spendingPlanGuid = null;
            //int? page = null;
            //int? recordsPerPage = null;
            //var response = instance.ListSpendingPlanIterations(userGuid, spendingPlanGuid, page, recordsPerPage);
            //Assert.IsType<SpendingPlanIterationsResponse>(response);
        }

        /// <summary>
        /// Test ListSpendingPlans
        /// </summary>
        [Fact]
        public void ListSpendingPlansTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userGuid = null;
            //int? page = null;
            //int? recordsPerPage = null;
            //var response = instance.ListSpendingPlans(userGuid, page, recordsPerPage);
            //Assert.IsType<SpendingPlansResponseBody>(response);
        }

        /// <summary>
        /// Test ReadSpendingPlanAccount
        /// </summary>
        [Fact]
        public void ReadSpendingPlanAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userGuid = null;
            //string spendingPlanGuid = null;
            //string spendingPlanAccountGuid = null;
            //int? page = null;
            //int? recordsPerPage = null;
            //var response = instance.ReadSpendingPlanAccount(userGuid, spendingPlanGuid, spendingPlanAccountGuid, page, recordsPerPage);
            //Assert.IsType<SpendingPlanAccountResponse>(response);
        }

        /// <summary>
        /// Test ReadSpendingPlanIteration
        /// </summary>
        [Fact]
        public void ReadSpendingPlanIterationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userGuid = null;
            //string spendingPlanGuid = null;
            //int iterationNumber = null;
            //int? page = null;
            //int? recordsPerPage = null;
            //var response = instance.ReadSpendingPlanIteration(userGuid, spendingPlanGuid, iterationNumber, page, recordsPerPage);
            //Assert.IsType<SpendingPlanIterationResponse>(response);
        }

        /// <summary>
        /// Test ReadSpendingPlanIterationItem
        /// </summary>
        [Fact]
        public void ReadSpendingPlanIterationItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userGuid = null;
            //string spendingPlanGuid = null;
            //string iterationItemGuid = null;
            //int? page = null;
            //int? recordsPerPage = null;
            //var response = instance.ReadSpendingPlanIterationItem(userGuid, spendingPlanGuid, iterationItemGuid, page, recordsPerPage);
            //Assert.IsType<SpendingPlanIterationItemResponse>(response);
        }

        /// <summary>
        /// Test ReadSpendingPlanUser
        /// </summary>
        [Fact]
        public void ReadSpendingPlanUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userGuid = null;
            //string spendingPlanGuid = null;
            //int? page = null;
            //int? recordsPerPage = null;
            //var response = instance.ReadSpendingPlanUser(userGuid, spendingPlanGuid, page, recordsPerPage);
            //Assert.IsType<SpendingPlanResponse>(response);
        }

        /// <summary>
        /// Test UpdateSpendingPlanIterationItem
        /// </summary>
        [Fact]
        public void UpdateSpendingPlanIterationItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string userGuid = null;
            //string spendingPlanGuid = null;
            //string iterationItemGuid = null;
            //SpendingPlanIterationItemCreateRequestBody spendingPlanIterationItemCreateRequestBody = null;
            //var response = instance.UpdateSpendingPlanIterationItem(userGuid, spendingPlanGuid, iterationItemGuid, spendingPlanIterationItemCreateRequestBody);
            //Assert.IsType<SpendingPlanIterationItemResponse>(response);
        }
    }
}
