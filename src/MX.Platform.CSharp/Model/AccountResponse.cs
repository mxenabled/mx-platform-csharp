/*
 * MX Platform API
 *
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MX.Platform.CSharp.Client.OpenAPIDateConverter;

namespace MX.Platform.CSharp.Model
{
    /// <summary>
    /// AccountResponse
    /// </summary>
    [DataContract(Name = "AccountResponse")]
    public partial class AccountResponse : IEquatable<AccountResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AccountResponse" /> class.
        /// </summary>
        /// <param name="accountNumber">accountNumber.</param>
        /// <param name="accountOwnership">accountOwnership.</param>
        /// <param name="annuityPolicyToDate">annuityPolicyToDate.</param>
        /// <param name="annuityProvider">annuityProvider.</param>
        /// <param name="annuityTermYear">annuityTermYear.</param>
        /// <param name="apr">apr.</param>
        /// <param name="apy">apy.</param>
        /// <param name="availableBalance">availableBalance.</param>
        /// <param name="availableCredit">availableCredit.</param>
        /// <param name="balance">balance.</param>
        /// <param name="cashBalance">cashBalance.</param>
        /// <param name="cashSurrenderValue">cashSurrenderValue.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="creditLimit">creditLimit.</param>
        /// <param name="currencyCode">currencyCode.</param>
        /// <param name="dayPaymentIsDue">dayPaymentIsDue.</param>
        /// <param name="deathBenefit">deathBenefit.</param>
        /// <param name="guid">guid.</param>
        /// <param name="holdingsValue">holdingsValue.</param>
        /// <param name="id">id.</param>
        /// <param name="importedAt">importedAt.</param>
        /// <param name="interestRate">interestRate.</param>
        /// <param name="institutionCode">institutionCode.</param>
        /// <param name="insuredName">insuredName.</param>
        /// <param name="isClosed">isClosed.</param>
        /// <param name="isHidden">isHidden.</param>
        /// <param name="isManual">isManual.</param>
        /// <param name="lastPayment">lastPayment.</param>
        /// <param name="lastPaymentAt">lastPaymentAt.</param>
        /// <param name="loanAmount">loanAmount.</param>
        /// <param name="marginBalance">marginBalance.</param>
        /// <param name="maturesOn">maturesOn.</param>
        /// <param name="memberGuid">memberGuid.</param>
        /// <param name="memberId">memberId.</param>
        /// <param name="memberIsManagedByUser">memberIsManagedByUser.</param>
        /// <param name="metadata">metadata.</param>
        /// <param name="minimumBalance">minimumBalance.</param>
        /// <param name="minimumPayment">minimumPayment.</param>
        /// <param name="name">name.</param>
        /// <param name="nickname">nickname.</param>
        /// <param name="originalBalance">originalBalance.</param>
        /// <param name="payOutAmount">payOutAmount.</param>
        /// <param name="paymentDueAt">paymentDueAt.</param>
        /// <param name="payoffBalance">payoffBalance.</param>
        /// <param name="premiumAmount">premiumAmount.</param>
        /// <param name="routingNumber">routingNumber.</param>
        /// <param name="startedOn">startedOn.</param>
        /// <param name="subtype">subtype.</param>
        /// <param name="todayUglAmount">todayUglAmount.</param>
        /// <param name="todayUglPercentage">todayUglPercentage.</param>
        /// <param name="totalAccountValue">totalAccountValue.</param>
        /// <param name="type">type.</param>
        /// <param name="updatedAt">updatedAt.</param>
        /// <param name="userGuid">userGuid.</param>
        /// <param name="userId">userId.</param>
        public AccountResponse(string accountNumber = default(string), string accountOwnership = default(string), string annuityPolicyToDate = default(string), string annuityProvider = default(string), decimal? annuityTermYear = default(decimal?), decimal? apr = default(decimal?), decimal? apy = default(decimal?), decimal? availableBalance = default(decimal?), decimal? availableCredit = default(decimal?), decimal? balance = default(decimal?), decimal? cashBalance = default(decimal?), decimal? cashSurrenderValue = default(decimal?), string createdAt = default(string), decimal? creditLimit = default(decimal?), string currencyCode = default(string), int? dayPaymentIsDue = default(int?), int? deathBenefit = default(int?), string guid = default(string), decimal? holdingsValue = default(decimal?), string id = default(string), string importedAt = default(string), decimal? interestRate = default(decimal?), string institutionCode = default(string), string insuredName = default(string), bool? isClosed = default(bool?), bool? isHidden = default(bool?), bool? isManual = default(bool?), decimal? lastPayment = default(decimal?), string lastPaymentAt = default(string), decimal? loanAmount = default(decimal?), decimal? marginBalance = default(decimal?), string maturesOn = default(string), string memberGuid = default(string), string memberId = default(string), bool? memberIsManagedByUser = default(bool?), string metadata = default(string), decimal? minimumBalance = default(decimal?), decimal? minimumPayment = default(decimal?), string name = default(string), string nickname = default(string), decimal? originalBalance = default(decimal?), decimal? payOutAmount = default(decimal?), string paymentDueAt = default(string), decimal? payoffBalance = default(decimal?), decimal? premiumAmount = default(decimal?), string routingNumber = default(string), string startedOn = default(string), string subtype = default(string), decimal? todayUglAmount = default(decimal?), decimal? todayUglPercentage = default(decimal?), decimal? totalAccountValue = default(decimal?), string type = default(string), string updatedAt = default(string), string userGuid = default(string), string userId = default(string))
        {
            this.AccountNumber = accountNumber;
            this.AccountOwnership = accountOwnership;
            this.AnnuityPolicyToDate = annuityPolicyToDate;
            this.AnnuityProvider = annuityProvider;
            this.AnnuityTermYear = annuityTermYear;
            this.Apr = apr;
            this.Apy = apy;
            this.AvailableBalance = availableBalance;
            this.AvailableCredit = availableCredit;
            this.Balance = balance;
            this.CashBalance = cashBalance;
            this.CashSurrenderValue = cashSurrenderValue;
            this.CreatedAt = createdAt;
            this.CreditLimit = creditLimit;
            this.CurrencyCode = currencyCode;
            this.DayPaymentIsDue = dayPaymentIsDue;
            this.DeathBenefit = deathBenefit;
            this.Guid = guid;
            this.HoldingsValue = holdingsValue;
            this.Id = id;
            this.ImportedAt = importedAt;
            this.InterestRate = interestRate;
            this.InstitutionCode = institutionCode;
            this.InsuredName = insuredName;
            this.IsClosed = isClosed;
            this.IsHidden = isHidden;
            this.IsManual = isManual;
            this.LastPayment = lastPayment;
            this.LastPaymentAt = lastPaymentAt;
            this.LoanAmount = loanAmount;
            this.MarginBalance = marginBalance;
            this.MaturesOn = maturesOn;
            this.MemberGuid = memberGuid;
            this.MemberId = memberId;
            this.MemberIsManagedByUser = memberIsManagedByUser;
            this.Metadata = metadata;
            this.MinimumBalance = minimumBalance;
            this.MinimumPayment = minimumPayment;
            this.Name = name;
            this.Nickname = nickname;
            this.OriginalBalance = originalBalance;
            this.PayOutAmount = payOutAmount;
            this.PaymentDueAt = paymentDueAt;
            this.PayoffBalance = payoffBalance;
            this.PremiumAmount = premiumAmount;
            this.RoutingNumber = routingNumber;
            this.StartedOn = startedOn;
            this.Subtype = subtype;
            this.TodayUglAmount = todayUglAmount;
            this.TodayUglPercentage = todayUglPercentage;
            this.TotalAccountValue = totalAccountValue;
            this.Type = type;
            this.UpdatedAt = updatedAt;
            this.UserGuid = userGuid;
            this.UserId = userId;
        }

        /// <summary>
        /// Gets or Sets AccountNumber
        /// </summary>
        [DataMember(Name = "account_number", EmitDefaultValue = true)]
        public string AccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets AccountOwnership
        /// </summary>
        [DataMember(Name = "account_ownership", EmitDefaultValue = true)]
        public string AccountOwnership { get; set; }

        /// <summary>
        /// Gets or Sets AnnuityPolicyToDate
        /// </summary>
        [DataMember(Name = "annuity_policy_to_date", EmitDefaultValue = true)]
        public string AnnuityPolicyToDate { get; set; }

        /// <summary>
        /// Gets or Sets AnnuityProvider
        /// </summary>
        [DataMember(Name = "annuity_provider", EmitDefaultValue = true)]
        public string AnnuityProvider { get; set; }

        /// <summary>
        /// Gets or Sets AnnuityTermYear
        /// </summary>
        [DataMember(Name = "annuity_term_year", EmitDefaultValue = true)]
        public decimal? AnnuityTermYear { get; set; }

        /// <summary>
        /// Gets or Sets Apr
        /// </summary>
        [DataMember(Name = "apr", EmitDefaultValue = true)]
        public decimal? Apr { get; set; }

        /// <summary>
        /// Gets or Sets Apy
        /// </summary>
        [DataMember(Name = "apy", EmitDefaultValue = true)]
        public decimal? Apy { get; set; }

        /// <summary>
        /// Gets or Sets AvailableBalance
        /// </summary>
        [DataMember(Name = "available_balance", EmitDefaultValue = true)]
        public decimal? AvailableBalance { get; set; }

        /// <summary>
        /// Gets or Sets AvailableCredit
        /// </summary>
        [DataMember(Name = "available_credit", EmitDefaultValue = true)]
        public decimal? AvailableCredit { get; set; }

        /// <summary>
        /// Gets or Sets Balance
        /// </summary>
        [DataMember(Name = "balance", EmitDefaultValue = true)]
        public decimal? Balance { get; set; }

        /// <summary>
        /// Gets or Sets CashBalance
        /// </summary>
        [DataMember(Name = "cash_balance", EmitDefaultValue = true)]
        public decimal? CashBalance { get; set; }

        /// <summary>
        /// Gets or Sets CashSurrenderValue
        /// </summary>
        [DataMember(Name = "cash_surrender_value", EmitDefaultValue = true)]
        public decimal? CashSurrenderValue { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "created_at", EmitDefaultValue = false)]
        public string CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets CreditLimit
        /// </summary>
        [DataMember(Name = "credit_limit", EmitDefaultValue = true)]
        public decimal? CreditLimit { get; set; }

        /// <summary>
        /// Gets or Sets CurrencyCode
        /// </summary>
        [DataMember(Name = "currency_code", EmitDefaultValue = true)]
        public string CurrencyCode { get; set; }

        /// <summary>
        /// Gets or Sets DayPaymentIsDue
        /// </summary>
        [DataMember(Name = "day_payment_is_due", EmitDefaultValue = true)]
        public int? DayPaymentIsDue { get; set; }

        /// <summary>
        /// Gets or Sets DeathBenefit
        /// </summary>
        [DataMember(Name = "death_benefit", EmitDefaultValue = true)]
        public int? DeathBenefit { get; set; }

        /// <summary>
        /// Gets or Sets Guid
        /// </summary>
        [DataMember(Name = "guid", EmitDefaultValue = true)]
        public string Guid { get; set; }

        /// <summary>
        /// Gets or Sets HoldingsValue
        /// </summary>
        [DataMember(Name = "holdings_value", EmitDefaultValue = true)]
        public decimal? HoldingsValue { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets ImportedAt
        /// </summary>
        [DataMember(Name = "imported_at", EmitDefaultValue = true)]
        public string ImportedAt { get; set; }

        /// <summary>
        /// Gets or Sets InterestRate
        /// </summary>
        [DataMember(Name = "interest_rate", EmitDefaultValue = true)]
        public decimal? InterestRate { get; set; }

        /// <summary>
        /// Gets or Sets InstitutionCode
        /// </summary>
        [DataMember(Name = "institution_code", EmitDefaultValue = true)]
        public string InstitutionCode { get; set; }

        /// <summary>
        /// Gets or Sets InsuredName
        /// </summary>
        [DataMember(Name = "insured_name", EmitDefaultValue = true)]
        public string InsuredName { get; set; }

        /// <summary>
        /// Gets or Sets IsClosed
        /// </summary>
        [DataMember(Name = "is_closed", EmitDefaultValue = true)]
        public bool? IsClosed { get; set; }

        /// <summary>
        /// Gets or Sets IsHidden
        /// </summary>
        [DataMember(Name = "is_hidden", EmitDefaultValue = true)]
        public bool? IsHidden { get; set; }

        /// <summary>
        /// Gets or Sets IsManual
        /// </summary>
        [DataMember(Name = "is_manual", EmitDefaultValue = true)]
        public bool? IsManual { get; set; }

        /// <summary>
        /// Gets or Sets LastPayment
        /// </summary>
        [DataMember(Name = "last_payment", EmitDefaultValue = true)]
        public decimal? LastPayment { get; set; }

        /// <summary>
        /// Gets or Sets LastPaymentAt
        /// </summary>
        [DataMember(Name = "last_payment_at", EmitDefaultValue = true)]
        public string LastPaymentAt { get; set; }

        /// <summary>
        /// Gets or Sets LoanAmount
        /// </summary>
        [DataMember(Name = "loan_amount", EmitDefaultValue = true)]
        public decimal? LoanAmount { get; set; }

        /// <summary>
        /// Gets or Sets MarginBalance
        /// </summary>
        [DataMember(Name = "margin_balance", EmitDefaultValue = true)]
        public decimal? MarginBalance { get; set; }

        /// <summary>
        /// Gets or Sets MaturesOn
        /// </summary>
        [DataMember(Name = "matures_on", EmitDefaultValue = true)]
        public string MaturesOn { get; set; }

        /// <summary>
        /// Gets or Sets MemberGuid
        /// </summary>
        [DataMember(Name = "member_guid", EmitDefaultValue = true)]
        public string MemberGuid { get; set; }

        /// <summary>
        /// Gets or Sets MemberId
        /// </summary>
        [DataMember(Name = "member_id", EmitDefaultValue = true)]
        public string MemberId { get; set; }

        /// <summary>
        /// Gets or Sets MemberIsManagedByUser
        /// </summary>
        [DataMember(Name = "member_is_managed_by_user", EmitDefaultValue = true)]
        public bool? MemberIsManagedByUser { get; set; }

        /// <summary>
        /// Gets or Sets Metadata
        /// </summary>
        [DataMember(Name = "metadata", EmitDefaultValue = true)]
        public string Metadata { get; set; }

        /// <summary>
        /// Gets or Sets MinimumBalance
        /// </summary>
        [DataMember(Name = "minimum_balance", EmitDefaultValue = true)]
        public decimal? MinimumBalance { get; set; }

        /// <summary>
        /// Gets or Sets MinimumPayment
        /// </summary>
        [DataMember(Name = "minimum_payment", EmitDefaultValue = true)]
        public decimal? MinimumPayment { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Nickname
        /// </summary>
        [DataMember(Name = "nickname", EmitDefaultValue = true)]
        public string Nickname { get; set; }

        /// <summary>
        /// Gets or Sets OriginalBalance
        /// </summary>
        [DataMember(Name = "original_balance", EmitDefaultValue = true)]
        public decimal? OriginalBalance { get; set; }

        /// <summary>
        /// Gets or Sets PayOutAmount
        /// </summary>
        [DataMember(Name = "pay_out_amount", EmitDefaultValue = true)]
        public decimal? PayOutAmount { get; set; }

        /// <summary>
        /// Gets or Sets PaymentDueAt
        /// </summary>
        [DataMember(Name = "payment_due_at", EmitDefaultValue = true)]
        public string PaymentDueAt { get; set; }

        /// <summary>
        /// Gets or Sets PayoffBalance
        /// </summary>
        [DataMember(Name = "payoff_balance", EmitDefaultValue = true)]
        public decimal? PayoffBalance { get; set; }

        /// <summary>
        /// Gets or Sets PremiumAmount
        /// </summary>
        [DataMember(Name = "premium_amount", EmitDefaultValue = true)]
        public decimal? PremiumAmount { get; set; }

        /// <summary>
        /// Gets or Sets RoutingNumber
        /// </summary>
        [DataMember(Name = "routing_number", EmitDefaultValue = true)]
        public string RoutingNumber { get; set; }

        /// <summary>
        /// Gets or Sets StartedOn
        /// </summary>
        [DataMember(Name = "started_on", EmitDefaultValue = true)]
        public string StartedOn { get; set; }

        /// <summary>
        /// Gets or Sets Subtype
        /// </summary>
        [DataMember(Name = "subtype", EmitDefaultValue = true)]
        public string Subtype { get; set; }

        /// <summary>
        /// Gets or Sets TodayUglAmount
        /// </summary>
        [DataMember(Name = "today_ugl_amount", EmitDefaultValue = true)]
        public decimal? TodayUglAmount { get; set; }

        /// <summary>
        /// Gets or Sets TodayUglPercentage
        /// </summary>
        [DataMember(Name = "today_ugl_percentage", EmitDefaultValue = true)]
        public decimal? TodayUglPercentage { get; set; }

        /// <summary>
        /// Gets or Sets TotalAccountValue
        /// </summary>
        [DataMember(Name = "total_account_value", EmitDefaultValue = true)]
        public decimal? TotalAccountValue { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = true)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name = "updated_at", EmitDefaultValue = true)]
        public string UpdatedAt { get; set; }

        /// <summary>
        /// Gets or Sets UserGuid
        /// </summary>
        [DataMember(Name = "user_guid", EmitDefaultValue = true)]
        public string UserGuid { get; set; }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [DataMember(Name = "user_id", EmitDefaultValue = true)]
        public string UserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AccountResponse {\n");
            sb.Append("  AccountNumber: ").Append(AccountNumber).Append("\n");
            sb.Append("  AccountOwnership: ").Append(AccountOwnership).Append("\n");
            sb.Append("  AnnuityPolicyToDate: ").Append(AnnuityPolicyToDate).Append("\n");
            sb.Append("  AnnuityProvider: ").Append(AnnuityProvider).Append("\n");
            sb.Append("  AnnuityTermYear: ").Append(AnnuityTermYear).Append("\n");
            sb.Append("  Apr: ").Append(Apr).Append("\n");
            sb.Append("  Apy: ").Append(Apy).Append("\n");
            sb.Append("  AvailableBalance: ").Append(AvailableBalance).Append("\n");
            sb.Append("  AvailableCredit: ").Append(AvailableCredit).Append("\n");
            sb.Append("  Balance: ").Append(Balance).Append("\n");
            sb.Append("  CashBalance: ").Append(CashBalance).Append("\n");
            sb.Append("  CashSurrenderValue: ").Append(CashSurrenderValue).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  CreditLimit: ").Append(CreditLimit).Append("\n");
            sb.Append("  CurrencyCode: ").Append(CurrencyCode).Append("\n");
            sb.Append("  DayPaymentIsDue: ").Append(DayPaymentIsDue).Append("\n");
            sb.Append("  DeathBenefit: ").Append(DeathBenefit).Append("\n");
            sb.Append("  Guid: ").Append(Guid).Append("\n");
            sb.Append("  HoldingsValue: ").Append(HoldingsValue).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ImportedAt: ").Append(ImportedAt).Append("\n");
            sb.Append("  InterestRate: ").Append(InterestRate).Append("\n");
            sb.Append("  InstitutionCode: ").Append(InstitutionCode).Append("\n");
            sb.Append("  InsuredName: ").Append(InsuredName).Append("\n");
            sb.Append("  IsClosed: ").Append(IsClosed).Append("\n");
            sb.Append("  IsHidden: ").Append(IsHidden).Append("\n");
            sb.Append("  IsManual: ").Append(IsManual).Append("\n");
            sb.Append("  LastPayment: ").Append(LastPayment).Append("\n");
            sb.Append("  LastPaymentAt: ").Append(LastPaymentAt).Append("\n");
            sb.Append("  LoanAmount: ").Append(LoanAmount).Append("\n");
            sb.Append("  MarginBalance: ").Append(MarginBalance).Append("\n");
            sb.Append("  MaturesOn: ").Append(MaturesOn).Append("\n");
            sb.Append("  MemberGuid: ").Append(MemberGuid).Append("\n");
            sb.Append("  MemberId: ").Append(MemberId).Append("\n");
            sb.Append("  MemberIsManagedByUser: ").Append(MemberIsManagedByUser).Append("\n");
            sb.Append("  Metadata: ").Append(Metadata).Append("\n");
            sb.Append("  MinimumBalance: ").Append(MinimumBalance).Append("\n");
            sb.Append("  MinimumPayment: ").Append(MinimumPayment).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Nickname: ").Append(Nickname).Append("\n");
            sb.Append("  OriginalBalance: ").Append(OriginalBalance).Append("\n");
            sb.Append("  PayOutAmount: ").Append(PayOutAmount).Append("\n");
            sb.Append("  PaymentDueAt: ").Append(PaymentDueAt).Append("\n");
            sb.Append("  PayoffBalance: ").Append(PayoffBalance).Append("\n");
            sb.Append("  PremiumAmount: ").Append(PremiumAmount).Append("\n");
            sb.Append("  RoutingNumber: ").Append(RoutingNumber).Append("\n");
            sb.Append("  StartedOn: ").Append(StartedOn).Append("\n");
            sb.Append("  Subtype: ").Append(Subtype).Append("\n");
            sb.Append("  TodayUglAmount: ").Append(TodayUglAmount).Append("\n");
            sb.Append("  TodayUglPercentage: ").Append(TodayUglPercentage).Append("\n");
            sb.Append("  TotalAccountValue: ").Append(TotalAccountValue).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  UserGuid: ").Append(UserGuid).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AccountResponse);
        }

        /// <summary>
        /// Returns true if AccountResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of AccountResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AccountResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AccountNumber == input.AccountNumber ||
                    (this.AccountNumber != null &&
                    this.AccountNumber.Equals(input.AccountNumber))
                ) && 
                (
                    this.AccountOwnership == input.AccountOwnership ||
                    (this.AccountOwnership != null &&
                    this.AccountOwnership.Equals(input.AccountOwnership))
                ) && 
                (
                    this.AnnuityPolicyToDate == input.AnnuityPolicyToDate ||
                    (this.AnnuityPolicyToDate != null &&
                    this.AnnuityPolicyToDate.Equals(input.AnnuityPolicyToDate))
                ) && 
                (
                    this.AnnuityProvider == input.AnnuityProvider ||
                    (this.AnnuityProvider != null &&
                    this.AnnuityProvider.Equals(input.AnnuityProvider))
                ) && 
                (
                    this.AnnuityTermYear == input.AnnuityTermYear ||
                    (this.AnnuityTermYear != null &&
                    this.AnnuityTermYear.Equals(input.AnnuityTermYear))
                ) && 
                (
                    this.Apr == input.Apr ||
                    (this.Apr != null &&
                    this.Apr.Equals(input.Apr))
                ) && 
                (
                    this.Apy == input.Apy ||
                    (this.Apy != null &&
                    this.Apy.Equals(input.Apy))
                ) && 
                (
                    this.AvailableBalance == input.AvailableBalance ||
                    (this.AvailableBalance != null &&
                    this.AvailableBalance.Equals(input.AvailableBalance))
                ) && 
                (
                    this.AvailableCredit == input.AvailableCredit ||
                    (this.AvailableCredit != null &&
                    this.AvailableCredit.Equals(input.AvailableCredit))
                ) && 
                (
                    this.Balance == input.Balance ||
                    (this.Balance != null &&
                    this.Balance.Equals(input.Balance))
                ) && 
                (
                    this.CashBalance == input.CashBalance ||
                    (this.CashBalance != null &&
                    this.CashBalance.Equals(input.CashBalance))
                ) && 
                (
                    this.CashSurrenderValue == input.CashSurrenderValue ||
                    (this.CashSurrenderValue != null &&
                    this.CashSurrenderValue.Equals(input.CashSurrenderValue))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.CreditLimit == input.CreditLimit ||
                    (this.CreditLimit != null &&
                    this.CreditLimit.Equals(input.CreditLimit))
                ) && 
                (
                    this.CurrencyCode == input.CurrencyCode ||
                    (this.CurrencyCode != null &&
                    this.CurrencyCode.Equals(input.CurrencyCode))
                ) && 
                (
                    this.DayPaymentIsDue == input.DayPaymentIsDue ||
                    (this.DayPaymentIsDue != null &&
                    this.DayPaymentIsDue.Equals(input.DayPaymentIsDue))
                ) && 
                (
                    this.DeathBenefit == input.DeathBenefit ||
                    (this.DeathBenefit != null &&
                    this.DeathBenefit.Equals(input.DeathBenefit))
                ) && 
                (
                    this.Guid == input.Guid ||
                    (this.Guid != null &&
                    this.Guid.Equals(input.Guid))
                ) && 
                (
                    this.HoldingsValue == input.HoldingsValue ||
                    (this.HoldingsValue != null &&
                    this.HoldingsValue.Equals(input.HoldingsValue))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.ImportedAt == input.ImportedAt ||
                    (this.ImportedAt != null &&
                    this.ImportedAt.Equals(input.ImportedAt))
                ) && 
                (
                    this.InterestRate == input.InterestRate ||
                    (this.InterestRate != null &&
                    this.InterestRate.Equals(input.InterestRate))
                ) && 
                (
                    this.InstitutionCode == input.InstitutionCode ||
                    (this.InstitutionCode != null &&
                    this.InstitutionCode.Equals(input.InstitutionCode))
                ) && 
                (
                    this.InsuredName == input.InsuredName ||
                    (this.InsuredName != null &&
                    this.InsuredName.Equals(input.InsuredName))
                ) && 
                (
                    this.IsClosed == input.IsClosed ||
                    (this.IsClosed != null &&
                    this.IsClosed.Equals(input.IsClosed))
                ) && 
                (
                    this.IsHidden == input.IsHidden ||
                    (this.IsHidden != null &&
                    this.IsHidden.Equals(input.IsHidden))
                ) && 
                (
                    this.IsManual == input.IsManual ||
                    (this.IsManual != null &&
                    this.IsManual.Equals(input.IsManual))
                ) && 
                (
                    this.LastPayment == input.LastPayment ||
                    (this.LastPayment != null &&
                    this.LastPayment.Equals(input.LastPayment))
                ) && 
                (
                    this.LastPaymentAt == input.LastPaymentAt ||
                    (this.LastPaymentAt != null &&
                    this.LastPaymentAt.Equals(input.LastPaymentAt))
                ) && 
                (
                    this.LoanAmount == input.LoanAmount ||
                    (this.LoanAmount != null &&
                    this.LoanAmount.Equals(input.LoanAmount))
                ) && 
                (
                    this.MarginBalance == input.MarginBalance ||
                    (this.MarginBalance != null &&
                    this.MarginBalance.Equals(input.MarginBalance))
                ) && 
                (
                    this.MaturesOn == input.MaturesOn ||
                    (this.MaturesOn != null &&
                    this.MaturesOn.Equals(input.MaturesOn))
                ) && 
                (
                    this.MemberGuid == input.MemberGuid ||
                    (this.MemberGuid != null &&
                    this.MemberGuid.Equals(input.MemberGuid))
                ) && 
                (
                    this.MemberId == input.MemberId ||
                    (this.MemberId != null &&
                    this.MemberId.Equals(input.MemberId))
                ) && 
                (
                    this.MemberIsManagedByUser == input.MemberIsManagedByUser ||
                    (this.MemberIsManagedByUser != null &&
                    this.MemberIsManagedByUser.Equals(input.MemberIsManagedByUser))
                ) && 
                (
                    this.Metadata == input.Metadata ||
                    (this.Metadata != null &&
                    this.Metadata.Equals(input.Metadata))
                ) && 
                (
                    this.MinimumBalance == input.MinimumBalance ||
                    (this.MinimumBalance != null &&
                    this.MinimumBalance.Equals(input.MinimumBalance))
                ) && 
                (
                    this.MinimumPayment == input.MinimumPayment ||
                    (this.MinimumPayment != null &&
                    this.MinimumPayment.Equals(input.MinimumPayment))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Nickname == input.Nickname ||
                    (this.Nickname != null &&
                    this.Nickname.Equals(input.Nickname))
                ) && 
                (
                    this.OriginalBalance == input.OriginalBalance ||
                    (this.OriginalBalance != null &&
                    this.OriginalBalance.Equals(input.OriginalBalance))
                ) && 
                (
                    this.PayOutAmount == input.PayOutAmount ||
                    (this.PayOutAmount != null &&
                    this.PayOutAmount.Equals(input.PayOutAmount))
                ) && 
                (
                    this.PaymentDueAt == input.PaymentDueAt ||
                    (this.PaymentDueAt != null &&
                    this.PaymentDueAt.Equals(input.PaymentDueAt))
                ) && 
                (
                    this.PayoffBalance == input.PayoffBalance ||
                    (this.PayoffBalance != null &&
                    this.PayoffBalance.Equals(input.PayoffBalance))
                ) && 
                (
                    this.PremiumAmount == input.PremiumAmount ||
                    (this.PremiumAmount != null &&
                    this.PremiumAmount.Equals(input.PremiumAmount))
                ) && 
                (
                    this.RoutingNumber == input.RoutingNumber ||
                    (this.RoutingNumber != null &&
                    this.RoutingNumber.Equals(input.RoutingNumber))
                ) && 
                (
                    this.StartedOn == input.StartedOn ||
                    (this.StartedOn != null &&
                    this.StartedOn.Equals(input.StartedOn))
                ) && 
                (
                    this.Subtype == input.Subtype ||
                    (this.Subtype != null &&
                    this.Subtype.Equals(input.Subtype))
                ) && 
                (
                    this.TodayUglAmount == input.TodayUglAmount ||
                    (this.TodayUglAmount != null &&
                    this.TodayUglAmount.Equals(input.TodayUglAmount))
                ) && 
                (
                    this.TodayUglPercentage == input.TodayUglPercentage ||
                    (this.TodayUglPercentage != null &&
                    this.TodayUglPercentage.Equals(input.TodayUglPercentage))
                ) && 
                (
                    this.TotalAccountValue == input.TotalAccountValue ||
                    (this.TotalAccountValue != null &&
                    this.TotalAccountValue.Equals(input.TotalAccountValue))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                ) && 
                (
                    this.UserGuid == input.UserGuid ||
                    (this.UserGuid != null &&
                    this.UserGuid.Equals(input.UserGuid))
                ) && 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccountNumber != null)
                {
                    hashCode = (hashCode * 59) + this.AccountNumber.GetHashCode();
                }
                if (this.AccountOwnership != null)
                {
                    hashCode = (hashCode * 59) + this.AccountOwnership.GetHashCode();
                }
                if (this.AnnuityPolicyToDate != null)
                {
                    hashCode = (hashCode * 59) + this.AnnuityPolicyToDate.GetHashCode();
                }
                if (this.AnnuityProvider != null)
                {
                    hashCode = (hashCode * 59) + this.AnnuityProvider.GetHashCode();
                }
                if (this.AnnuityTermYear != null)
                {
                    hashCode = (hashCode * 59) + this.AnnuityTermYear.GetHashCode();
                }
                if (this.Apr != null)
                {
                    hashCode = (hashCode * 59) + this.Apr.GetHashCode();
                }
                if (this.Apy != null)
                {
                    hashCode = (hashCode * 59) + this.Apy.GetHashCode();
                }
                if (this.AvailableBalance != null)
                {
                    hashCode = (hashCode * 59) + this.AvailableBalance.GetHashCode();
                }
                if (this.AvailableCredit != null)
                {
                    hashCode = (hashCode * 59) + this.AvailableCredit.GetHashCode();
                }
                if (this.Balance != null)
                {
                    hashCode = (hashCode * 59) + this.Balance.GetHashCode();
                }
                if (this.CashBalance != null)
                {
                    hashCode = (hashCode * 59) + this.CashBalance.GetHashCode();
                }
                if (this.CashSurrenderValue != null)
                {
                    hashCode = (hashCode * 59) + this.CashSurrenderValue.GetHashCode();
                }
                if (this.CreatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedAt.GetHashCode();
                }
                if (this.CreditLimit != null)
                {
                    hashCode = (hashCode * 59) + this.CreditLimit.GetHashCode();
                }
                if (this.CurrencyCode != null)
                {
                    hashCode = (hashCode * 59) + this.CurrencyCode.GetHashCode();
                }
                if (this.DayPaymentIsDue != null)
                {
                    hashCode = (hashCode * 59) + this.DayPaymentIsDue.GetHashCode();
                }
                if (this.DeathBenefit != null)
                {
                    hashCode = (hashCode * 59) + this.DeathBenefit.GetHashCode();
                }
                if (this.Guid != null)
                {
                    hashCode = (hashCode * 59) + this.Guid.GetHashCode();
                }
                if (this.HoldingsValue != null)
                {
                    hashCode = (hashCode * 59) + this.HoldingsValue.GetHashCode();
                }
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                if (this.ImportedAt != null)
                {
                    hashCode = (hashCode * 59) + this.ImportedAt.GetHashCode();
                }
                if (this.InterestRate != null)
                {
                    hashCode = (hashCode * 59) + this.InterestRate.GetHashCode();
                }
                if (this.InstitutionCode != null)
                {
                    hashCode = (hashCode * 59) + this.InstitutionCode.GetHashCode();
                }
                if (this.InsuredName != null)
                {
                    hashCode = (hashCode * 59) + this.InsuredName.GetHashCode();
                }
                if (this.IsClosed != null)
                {
                    hashCode = (hashCode * 59) + this.IsClosed.GetHashCode();
                }
                if (this.IsHidden != null)
                {
                    hashCode = (hashCode * 59) + this.IsHidden.GetHashCode();
                }
                if (this.IsManual != null)
                {
                    hashCode = (hashCode * 59) + this.IsManual.GetHashCode();
                }
                if (this.LastPayment != null)
                {
                    hashCode = (hashCode * 59) + this.LastPayment.GetHashCode();
                }
                if (this.LastPaymentAt != null)
                {
                    hashCode = (hashCode * 59) + this.LastPaymentAt.GetHashCode();
                }
                if (this.LoanAmount != null)
                {
                    hashCode = (hashCode * 59) + this.LoanAmount.GetHashCode();
                }
                if (this.MarginBalance != null)
                {
                    hashCode = (hashCode * 59) + this.MarginBalance.GetHashCode();
                }
                if (this.MaturesOn != null)
                {
                    hashCode = (hashCode * 59) + this.MaturesOn.GetHashCode();
                }
                if (this.MemberGuid != null)
                {
                    hashCode = (hashCode * 59) + this.MemberGuid.GetHashCode();
                }
                if (this.MemberId != null)
                {
                    hashCode = (hashCode * 59) + this.MemberId.GetHashCode();
                }
                if (this.MemberIsManagedByUser != null)
                {
                    hashCode = (hashCode * 59) + this.MemberIsManagedByUser.GetHashCode();
                }
                if (this.Metadata != null)
                {
                    hashCode = (hashCode * 59) + this.Metadata.GetHashCode();
                }
                if (this.MinimumBalance != null)
                {
                    hashCode = (hashCode * 59) + this.MinimumBalance.GetHashCode();
                }
                if (this.MinimumPayment != null)
                {
                    hashCode = (hashCode * 59) + this.MinimumPayment.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.Nickname != null)
                {
                    hashCode = (hashCode * 59) + this.Nickname.GetHashCode();
                }
                if (this.OriginalBalance != null)
                {
                    hashCode = (hashCode * 59) + this.OriginalBalance.GetHashCode();
                }
                if (this.PayOutAmount != null)
                {
                    hashCode = (hashCode * 59) + this.PayOutAmount.GetHashCode();
                }
                if (this.PaymentDueAt != null)
                {
                    hashCode = (hashCode * 59) + this.PaymentDueAt.GetHashCode();
                }
                if (this.PayoffBalance != null)
                {
                    hashCode = (hashCode * 59) + this.PayoffBalance.GetHashCode();
                }
                if (this.PremiumAmount != null)
                {
                    hashCode = (hashCode * 59) + this.PremiumAmount.GetHashCode();
                }
                if (this.RoutingNumber != null)
                {
                    hashCode = (hashCode * 59) + this.RoutingNumber.GetHashCode();
                }
                if (this.StartedOn != null)
                {
                    hashCode = (hashCode * 59) + this.StartedOn.GetHashCode();
                }
                if (this.Subtype != null)
                {
                    hashCode = (hashCode * 59) + this.Subtype.GetHashCode();
                }
                if (this.TodayUglAmount != null)
                {
                    hashCode = (hashCode * 59) + this.TodayUglAmount.GetHashCode();
                }
                if (this.TodayUglPercentage != null)
                {
                    hashCode = (hashCode * 59) + this.TodayUglPercentage.GetHashCode();
                }
                if (this.TotalAccountValue != null)
                {
                    hashCode = (hashCode * 59) + this.TotalAccountValue.GetHashCode();
                }
                if (this.Type != null)
                {
                    hashCode = (hashCode * 59) + this.Type.GetHashCode();
                }
                if (this.UpdatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.UpdatedAt.GetHashCode();
                }
                if (this.UserGuid != null)
                {
                    hashCode = (hashCode * 59) + this.UserGuid.GetHashCode();
                }
                if (this.UserId != null)
                {
                    hashCode = (hashCode * 59) + this.UserId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
