/*
 * MX Platform API
 *
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MX.Platform.CSharp.Client.OpenAPIDateConverter;

namespace MX.Platform.CSharp.Model
{
    /// <summary>
    /// CategoryResponse
    /// </summary>
    [DataContract(Name = "CategoryResponse")]
    public partial class CategoryResponse : IEquatable<CategoryResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CategoryResponse" /> class.
        /// </summary>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="guid">guid.</param>
        /// <param name="isDefault">isDefault.</param>
        /// <param name="isIncome">isIncome.</param>
        /// <param name="metadata">metadata.</param>
        /// <param name="name">name.</param>
        /// <param name="parentGuid">parentGuid.</param>
        /// <param name="updatedAt">updatedAt.</param>
        public CategoryResponse(string createdAt = default(string), string guid = default(string), bool? isDefault = default(bool?), bool? isIncome = default(bool?), string metadata = default(string), string name = default(string), string parentGuid = default(string), string updatedAt = default(string))
        {
            this.CreatedAt = createdAt;
            this.Guid = guid;
            this.IsDefault = isDefault;
            this.IsIncome = isIncome;
            this.Metadata = metadata;
            this.Name = name;
            this.ParentGuid = parentGuid;
            this.UpdatedAt = updatedAt;
        }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        /// <example>2015-04-13T18:01:23.000Z</example>
        [DataMember(Name = "created_at", EmitDefaultValue = true)]
        public string CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets Guid
        /// </summary>
        /// <example>CAT-7829f71c-2e8c-afa5-2f55-fa3634b89874</example>
        [DataMember(Name = "guid", EmitDefaultValue = true)]
        public string Guid { get; set; }

        /// <summary>
        /// Gets or Sets IsDefault
        /// </summary>
        /// <example>true</example>
        [DataMember(Name = "is_default", EmitDefaultValue = true)]
        public bool? IsDefault { get; set; }

        /// <summary>
        /// Gets or Sets IsIncome
        /// </summary>
        /// <example>false</example>
        [DataMember(Name = "is_income", EmitDefaultValue = true)]
        public bool? IsIncome { get; set; }

        /// <summary>
        /// Gets or Sets Metadata
        /// </summary>
        /// <example>some metadata</example>
        [DataMember(Name = "metadata", EmitDefaultValue = true)]
        public string Metadata { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        /// <example>Auto Insurance</example>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets ParentGuid
        /// </summary>
        /// <example>CAT-7829f71c-2e8c-afa5-2f55-fa3634b89874</example>
        [DataMember(Name = "parent_guid", EmitDefaultValue = true)]
        public string ParentGuid { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        /// <example>2015-05-13T18:01:23.000Z</example>
        [DataMember(Name = "updated_at", EmitDefaultValue = true)]
        public string UpdatedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CategoryResponse {\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Guid: ").Append(Guid).Append("\n");
            sb.Append("  IsDefault: ").Append(IsDefault).Append("\n");
            sb.Append("  IsIncome: ").Append(IsIncome).Append("\n");
            sb.Append("  Metadata: ").Append(Metadata).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ParentGuid: ").Append(ParentGuid).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CategoryResponse);
        }

        /// <summary>
        /// Returns true if CategoryResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of CategoryResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CategoryResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.Guid == input.Guid ||
                    (this.Guid != null &&
                    this.Guid.Equals(input.Guid))
                ) && 
                (
                    this.IsDefault == input.IsDefault ||
                    (this.IsDefault != null &&
                    this.IsDefault.Equals(input.IsDefault))
                ) && 
                (
                    this.IsIncome == input.IsIncome ||
                    (this.IsIncome != null &&
                    this.IsIncome.Equals(input.IsIncome))
                ) && 
                (
                    this.Metadata == input.Metadata ||
                    (this.Metadata != null &&
                    this.Metadata.Equals(input.Metadata))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.ParentGuid == input.ParentGuid ||
                    (this.ParentGuid != null &&
                    this.ParentGuid.Equals(input.ParentGuid))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CreatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedAt.GetHashCode();
                }
                if (this.Guid != null)
                {
                    hashCode = (hashCode * 59) + this.Guid.GetHashCode();
                }
                if (this.IsDefault != null)
                {
                    hashCode = (hashCode * 59) + this.IsDefault.GetHashCode();
                }
                if (this.IsIncome != null)
                {
                    hashCode = (hashCode * 59) + this.IsIncome.GetHashCode();
                }
                if (this.Metadata != null)
                {
                    hashCode = (hashCode * 59) + this.Metadata.GetHashCode();
                }
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.ParentGuid != null)
                {
                    hashCode = (hashCode * 59) + this.ParentGuid.GetHashCode();
                }
                if (this.UpdatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.UpdatedAt.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
