/*
 * MX Platform API
 *
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MX.Platform.CSharp.Client.OpenAPIDateConverter;

namespace MX.Platform.CSharp.Model
{
    /// <summary>
    /// TaggingResponse
    /// </summary>
    [DataContract(Name = "TaggingResponse")]
    public partial class TaggingResponse : IEquatable<TaggingResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TaggingResponse" /> class.
        /// </summary>
        /// <param name="guid">guid.</param>
        /// <param name="memberIsManagedByUser">memberIsManagedByUser.</param>
        /// <param name="tagGuid">tagGuid.</param>
        /// <param name="transactionGuid">transactionGuid.</param>
        /// <param name="userGuid">userGuid.</param>
        public TaggingResponse(string guid = default(string), bool? memberIsManagedByUser = default(bool?), string tagGuid = default(string), string transactionGuid = default(string), string userGuid = default(string))
        {
            this.Guid = guid;
            this.MemberIsManagedByUser = memberIsManagedByUser;
            this.TagGuid = tagGuid;
            this.TransactionGuid = transactionGuid;
            this.UserGuid = userGuid;
        }

        /// <summary>
        /// Gets or Sets Guid
        /// </summary>
        [DataMember(Name = "guid", EmitDefaultValue = false)]
        public string Guid { get; set; }

        /// <summary>
        /// Gets or Sets MemberIsManagedByUser
        /// </summary>
        [DataMember(Name = "member_is_managed_by_user", EmitDefaultValue = true)]
        public bool? MemberIsManagedByUser { get; set; }

        /// <summary>
        /// Gets or Sets TagGuid
        /// </summary>
        [DataMember(Name = "tag_guid", EmitDefaultValue = false)]
        public string TagGuid { get; set; }

        /// <summary>
        /// Gets or Sets TransactionGuid
        /// </summary>
        [DataMember(Name = "transaction_guid", EmitDefaultValue = false)]
        public string TransactionGuid { get; set; }

        /// <summary>
        /// Gets or Sets UserGuid
        /// </summary>
        [DataMember(Name = "user_guid", EmitDefaultValue = false)]
        public string UserGuid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TaggingResponse {\n");
            sb.Append("  Guid: ").Append(Guid).Append("\n");
            sb.Append("  MemberIsManagedByUser: ").Append(MemberIsManagedByUser).Append("\n");
            sb.Append("  TagGuid: ").Append(TagGuid).Append("\n");
            sb.Append("  TransactionGuid: ").Append(TransactionGuid).Append("\n");
            sb.Append("  UserGuid: ").Append(UserGuid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TaggingResponse);
        }

        /// <summary>
        /// Returns true if TaggingResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of TaggingResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TaggingResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Guid == input.Guid ||
                    (this.Guid != null &&
                    this.Guid.Equals(input.Guid))
                ) && 
                (
                    this.MemberIsManagedByUser == input.MemberIsManagedByUser ||
                    (this.MemberIsManagedByUser != null &&
                    this.MemberIsManagedByUser.Equals(input.MemberIsManagedByUser))
                ) && 
                (
                    this.TagGuid == input.TagGuid ||
                    (this.TagGuid != null &&
                    this.TagGuid.Equals(input.TagGuid))
                ) && 
                (
                    this.TransactionGuid == input.TransactionGuid ||
                    (this.TransactionGuid != null &&
                    this.TransactionGuid.Equals(input.TransactionGuid))
                ) && 
                (
                    this.UserGuid == input.UserGuid ||
                    (this.UserGuid != null &&
                    this.UserGuid.Equals(input.UserGuid))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Guid != null)
                    hashCode = hashCode * 59 + this.Guid.GetHashCode();
                if (this.MemberIsManagedByUser != null)
                    hashCode = hashCode * 59 + this.MemberIsManagedByUser.GetHashCode();
                if (this.TagGuid != null)
                    hashCode = hashCode * 59 + this.TagGuid.GetHashCode();
                if (this.TransactionGuid != null)
                    hashCode = hashCode * 59 + this.TransactionGuid.GetHashCode();
                if (this.UserGuid != null)
                    hashCode = hashCode * 59 + this.UserGuid.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
