/*
 * MX Platform API
 *
 * The MX Platform API is a powerful, fully-featured API designed to make aggregating and enhancing financial data easy and reliable. It can seamlessly connect your app or website to tens of thousands of financial institutions.
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MX.Platform.CSharp.Client.OpenAPIDateConverter;

namespace MX.Platform.CSharp.Model
{
    /// <summary>
    /// InsightResponse
    /// </summary>
    [DataContract(Name = "InsightResponse")]
    public partial class InsightResponse : IEquatable<InsightResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InsightResponse" /> class.
        /// </summary>
        /// <param name="activeAt">activeAt.</param>
        /// <param name="clientGuid">clientGuid.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="ctaClickedAt">ctaClickedAt.</param>
        /// <param name="description">description.</param>
        /// <param name="guid">guid.</param>
        /// <param name="hasAssociatedAccounts">hasAssociatedAccounts.</param>
        /// <param name="hasAssociatedMerchants">hasAssociatedMerchants.</param>
        /// <param name="hasAssociatedScheduledPayments">hasAssociatedScheduledPayments.</param>
        /// <param name="hasAssociatedTransactions">hasAssociatedTransactions.</param>
        /// <param name="hasBeenDisplayed">hasBeenDisplayed.</param>
        /// <param name="isDismissed">isDismissed.</param>
        /// <param name="microCallToAction">microCallToAction.</param>
        /// <param name="microDescription">microDescription.</param>
        /// <param name="microTitle">microTitle.</param>
        /// <param name="template">template.</param>
        /// <param name="title">title.</param>
        /// <param name="updatedAt">updatedAt.</param>
        /// <param name="userGuid">userGuid.</param>
        /// <param name="userId">userId.</param>
        public InsightResponse(string activeAt = default(string), string clientGuid = default(string), string createdAt = default(string), string ctaClickedAt = default(string), string description = default(string), string guid = default(string), bool? hasAssociatedAccounts = default(bool?), bool? hasAssociatedMerchants = default(bool?), bool? hasAssociatedScheduledPayments = default(bool?), bool? hasAssociatedTransactions = default(bool?), bool? hasBeenDisplayed = default(bool?), bool? isDismissed = default(bool?), string microCallToAction = default(string), string microDescription = default(string), string microTitle = default(string), string template = default(string), string title = default(string), string updatedAt = default(string), string userGuid = default(string), Object userId = default(Object))
        {
            this.ActiveAt = activeAt;
            this.ClientGuid = clientGuid;
            this.CreatedAt = createdAt;
            this.CtaClickedAt = ctaClickedAt;
            this.Description = description;
            this.Guid = guid;
            this.HasAssociatedAccounts = hasAssociatedAccounts;
            this.HasAssociatedMerchants = hasAssociatedMerchants;
            this.HasAssociatedScheduledPayments = hasAssociatedScheduledPayments;
            this.HasAssociatedTransactions = hasAssociatedTransactions;
            this.HasBeenDisplayed = hasBeenDisplayed;
            this.IsDismissed = isDismissed;
            this.MicroCallToAction = microCallToAction;
            this.MicroDescription = microDescription;
            this.MicroTitle = microTitle;
            this.Template = template;
            this.Title = title;
            this.UpdatedAt = updatedAt;
            this.UserGuid = userGuid;
            this.UserId = userId;
        }

        /// <summary>
        /// Gets or Sets ActiveAt
        /// </summary>
        /// <example>2022-01-07T12:00:00Z</example>
        [DataMember(Name = "active_at", EmitDefaultValue = true)]
        public string ActiveAt { get; set; }

        /// <summary>
        /// Gets or Sets ClientGuid
        /// </summary>
        /// <example>CLT-abcd-1234</example>
        [DataMember(Name = "client_guid", EmitDefaultValue = true)]
        public string ClientGuid { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        /// <example>2022-01-12T18:16:51Z</example>
        [DataMember(Name = "created_at", EmitDefaultValue = true)]
        public string CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets CtaClickedAt
        /// </summary>
        /// <example>2022-01-12T18:16:51Z</example>
        [DataMember(Name = "cta_clicked_at", EmitDefaultValue = true)]
        public string CtaClickedAt { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        /// <example>Gold&#39;s Gym charged you $36.71 more this month than normal. Did you upgrade your service?</example>
        [DataMember(Name = "description", EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets Guid
        /// </summary>
        /// <example>BET-abcd-1234</example>
        [DataMember(Name = "guid", EmitDefaultValue = true)]
        public string Guid { get; set; }

        /// <summary>
        /// Gets or Sets HasAssociatedAccounts
        /// </summary>
        /// <example>false</example>
        [DataMember(Name = "has_associated_accounts", EmitDefaultValue = true)]
        public bool? HasAssociatedAccounts { get; set; }

        /// <summary>
        /// Gets or Sets HasAssociatedMerchants
        /// </summary>
        /// <example>false</example>
        [DataMember(Name = "has_associated_merchants", EmitDefaultValue = true)]
        public bool? HasAssociatedMerchants { get; set; }

        /// <summary>
        /// Gets or Sets HasAssociatedScheduledPayments
        /// </summary>
        /// <example>false</example>
        [DataMember(Name = "has_associated_scheduled_payments", EmitDefaultValue = true)]
        public bool? HasAssociatedScheduledPayments { get; set; }

        /// <summary>
        /// Gets or Sets HasAssociatedTransactions
        /// </summary>
        /// <example>true</example>
        [DataMember(Name = "has_associated_transactions", EmitDefaultValue = true)]
        public bool? HasAssociatedTransactions { get; set; }

        /// <summary>
        /// Gets or Sets HasBeenDisplayed
        /// </summary>
        /// <example>true</example>
        [DataMember(Name = "has_been_displayed", EmitDefaultValue = true)]
        public bool? HasBeenDisplayed { get; set; }

        /// <summary>
        /// Gets or Sets IsDismissed
        /// </summary>
        /// <example>false</example>
        [DataMember(Name = "is_dismissed", EmitDefaultValue = true)]
        public bool? IsDismissed { get; set; }

        /// <summary>
        /// Gets or Sets MicroCallToAction
        /// </summary>
        /// <example>Learn more</example>
        [DataMember(Name = "micro_call_to_action", EmitDefaultValue = true)]
        public string MicroCallToAction { get; set; }

        /// <summary>
        /// Gets or Sets MicroDescription
        /// </summary>
        /// <example>Netflix charged you $5.00 more this month than normal.</example>
        [DataMember(Name = "micro_description", EmitDefaultValue = true)]
        public string MicroDescription { get; set; }

        /// <summary>
        /// Gets or Sets MicroTitle
        /// </summary>
        /// <example>Price increase</example>
        [DataMember(Name = "micro_title", EmitDefaultValue = true)]
        public string MicroTitle { get; set; }

        /// <summary>
        /// Gets or Sets Template
        /// </summary>
        /// <example>SubscriptionPriceIncrease</example>
        [DataMember(Name = "template", EmitDefaultValue = true)]
        public string Template { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        /// <example>Price increase</example>
        [DataMember(Name = "title", EmitDefaultValue = true)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        /// <example>2022-01-12T18:16:51Z</example>
        [DataMember(Name = "updated_at", EmitDefaultValue = true)]
        public string UpdatedAt { get; set; }

        /// <summary>
        /// Gets or Sets UserGuid
        /// </summary>
        /// <example>USR-1234-abcd</example>
        [DataMember(Name = "user_guid", EmitDefaultValue = false)]
        public string UserGuid { get; set; }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        /// <example>user-partner-defined-1234</example>
        [DataMember(Name = "user_id", EmitDefaultValue = true)]
        public Object UserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InsightResponse {\n");
            sb.Append("  ActiveAt: ").Append(ActiveAt).Append("\n");
            sb.Append("  ClientGuid: ").Append(ClientGuid).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  CtaClickedAt: ").Append(CtaClickedAt).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Guid: ").Append(Guid).Append("\n");
            sb.Append("  HasAssociatedAccounts: ").Append(HasAssociatedAccounts).Append("\n");
            sb.Append("  HasAssociatedMerchants: ").Append(HasAssociatedMerchants).Append("\n");
            sb.Append("  HasAssociatedScheduledPayments: ").Append(HasAssociatedScheduledPayments).Append("\n");
            sb.Append("  HasAssociatedTransactions: ").Append(HasAssociatedTransactions).Append("\n");
            sb.Append("  HasBeenDisplayed: ").Append(HasBeenDisplayed).Append("\n");
            sb.Append("  IsDismissed: ").Append(IsDismissed).Append("\n");
            sb.Append("  MicroCallToAction: ").Append(MicroCallToAction).Append("\n");
            sb.Append("  MicroDescription: ").Append(MicroDescription).Append("\n");
            sb.Append("  MicroTitle: ").Append(MicroTitle).Append("\n");
            sb.Append("  Template: ").Append(Template).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  UserGuid: ").Append(UserGuid).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InsightResponse);
        }

        /// <summary>
        /// Returns true if InsightResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of InsightResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InsightResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ActiveAt == input.ActiveAt ||
                    (this.ActiveAt != null &&
                    this.ActiveAt.Equals(input.ActiveAt))
                ) && 
                (
                    this.ClientGuid == input.ClientGuid ||
                    (this.ClientGuid != null &&
                    this.ClientGuid.Equals(input.ClientGuid))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.CtaClickedAt == input.CtaClickedAt ||
                    (this.CtaClickedAt != null &&
                    this.CtaClickedAt.Equals(input.CtaClickedAt))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Guid == input.Guid ||
                    (this.Guid != null &&
                    this.Guid.Equals(input.Guid))
                ) && 
                (
                    this.HasAssociatedAccounts == input.HasAssociatedAccounts ||
                    (this.HasAssociatedAccounts != null &&
                    this.HasAssociatedAccounts.Equals(input.HasAssociatedAccounts))
                ) && 
                (
                    this.HasAssociatedMerchants == input.HasAssociatedMerchants ||
                    (this.HasAssociatedMerchants != null &&
                    this.HasAssociatedMerchants.Equals(input.HasAssociatedMerchants))
                ) && 
                (
                    this.HasAssociatedScheduledPayments == input.HasAssociatedScheduledPayments ||
                    (this.HasAssociatedScheduledPayments != null &&
                    this.HasAssociatedScheduledPayments.Equals(input.HasAssociatedScheduledPayments))
                ) && 
                (
                    this.HasAssociatedTransactions == input.HasAssociatedTransactions ||
                    (this.HasAssociatedTransactions != null &&
                    this.HasAssociatedTransactions.Equals(input.HasAssociatedTransactions))
                ) && 
                (
                    this.HasBeenDisplayed == input.HasBeenDisplayed ||
                    (this.HasBeenDisplayed != null &&
                    this.HasBeenDisplayed.Equals(input.HasBeenDisplayed))
                ) && 
                (
                    this.IsDismissed == input.IsDismissed ||
                    (this.IsDismissed != null &&
                    this.IsDismissed.Equals(input.IsDismissed))
                ) && 
                (
                    this.MicroCallToAction == input.MicroCallToAction ||
                    (this.MicroCallToAction != null &&
                    this.MicroCallToAction.Equals(input.MicroCallToAction))
                ) && 
                (
                    this.MicroDescription == input.MicroDescription ||
                    (this.MicroDescription != null &&
                    this.MicroDescription.Equals(input.MicroDescription))
                ) && 
                (
                    this.MicroTitle == input.MicroTitle ||
                    (this.MicroTitle != null &&
                    this.MicroTitle.Equals(input.MicroTitle))
                ) && 
                (
                    this.Template == input.Template ||
                    (this.Template != null &&
                    this.Template.Equals(input.Template))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                ) && 
                (
                    this.UserGuid == input.UserGuid ||
                    (this.UserGuid != null &&
                    this.UserGuid.Equals(input.UserGuid))
                ) && 
                (
                    this.UserId == input.UserId ||
                    (this.UserId != null &&
                    this.UserId.Equals(input.UserId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ActiveAt != null)
                {
                    hashCode = (hashCode * 59) + this.ActiveAt.GetHashCode();
                }
                if (this.ClientGuid != null)
                {
                    hashCode = (hashCode * 59) + this.ClientGuid.GetHashCode();
                }
                if (this.CreatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedAt.GetHashCode();
                }
                if (this.CtaClickedAt != null)
                {
                    hashCode = (hashCode * 59) + this.CtaClickedAt.GetHashCode();
                }
                if (this.Description != null)
                {
                    hashCode = (hashCode * 59) + this.Description.GetHashCode();
                }
                if (this.Guid != null)
                {
                    hashCode = (hashCode * 59) + this.Guid.GetHashCode();
                }
                if (this.HasAssociatedAccounts != null)
                {
                    hashCode = (hashCode * 59) + this.HasAssociatedAccounts.GetHashCode();
                }
                if (this.HasAssociatedMerchants != null)
                {
                    hashCode = (hashCode * 59) + this.HasAssociatedMerchants.GetHashCode();
                }
                if (this.HasAssociatedScheduledPayments != null)
                {
                    hashCode = (hashCode * 59) + this.HasAssociatedScheduledPayments.GetHashCode();
                }
                if (this.HasAssociatedTransactions != null)
                {
                    hashCode = (hashCode * 59) + this.HasAssociatedTransactions.GetHashCode();
                }
                if (this.HasBeenDisplayed != null)
                {
                    hashCode = (hashCode * 59) + this.HasBeenDisplayed.GetHashCode();
                }
                if (this.IsDismissed != null)
                {
                    hashCode = (hashCode * 59) + this.IsDismissed.GetHashCode();
                }
                if (this.MicroCallToAction != null)
                {
                    hashCode = (hashCode * 59) + this.MicroCallToAction.GetHashCode();
                }
                if (this.MicroDescription != null)
                {
                    hashCode = (hashCode * 59) + this.MicroDescription.GetHashCode();
                }
                if (this.MicroTitle != null)
                {
                    hashCode = (hashCode * 59) + this.MicroTitle.GetHashCode();
                }
                if (this.Template != null)
                {
                    hashCode = (hashCode * 59) + this.Template.GetHashCode();
                }
                if (this.Title != null)
                {
                    hashCode = (hashCode * 59) + this.Title.GetHashCode();
                }
                if (this.UpdatedAt != null)
                {
                    hashCode = (hashCode * 59) + this.UpdatedAt.GetHashCode();
                }
                if (this.UserGuid != null)
                {
                    hashCode = (hashCode * 59) + this.UserGuid.GetHashCode();
                }
                if (this.UserId != null)
                {
                    hashCode = (hashCode * 59) + this.UserId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
